name: dbt CD
on:
  release:
    types: [created]

jobs:
  dbt-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set up dbt profile using inline template
        run: |
          mkdir -p /home/runner/.dbt
          cat <<EOF > /home/runner/.dbt/profiles.yml
          fanalyze:
            target: prod
            outputs:
              prod:
                type: snowflake
                account: "{{ env_var('SNOWFLAKE_ACCOUNT') }}"
                warehouse: "{{ env_var('SNOWFLAKE_WAREHOUSE') }}"
                database: "{{ env_var('SNOWFLAKE_DATABASE') }}"
                role: "{{ env_var('SNOWFLAKE_ROLE') }}"
                schema: "{{ env_var('SNOWFLAKE_SCHEMA') }}"
                user: "{{ env_var('SNOWFLAKE_CD_USER') }}"
                private_key: "{{ env_var('SNOWFLAKE_CD_USER_PRIVATE_KEY') }}"
                threads: 4
          EOF

      - name: Install dbt packages
        run: dbt deps


      - name: Run dbt build
        run: dbt build --target prod
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_CD_USER: ${{ secrets.SNOWFLAKE_CD_USER }}
          SNOWFLAKE_CD_USER_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_CD_USER_PRIVATE_KEY }}
