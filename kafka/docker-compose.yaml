version: "3.8"
services:
  airflow-cli:
    command:
    - bash
    - -c
    - airflow
    depends_on: &id001
      postgres: &id002
        condition: service_healthy
      redis: &id003
        condition: service_healthy
    environment:
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
      CONNECTION_CHECK_MAX_COUNT: '0'
      _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.2}
    profiles:
    - debug
    user: ${AIRFLOW_UID:-50000}:0
    volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
    - ${AIRFLOW_PROJ_DIR:-.}/dags/sql:/opt/airflow/dags/sql
    - ${AIRFLOW_PROJ_DIR:-.}/scripts:/opt/airflow/scripts
    - ${AIRFLOW_PROJ_DIR:-.}/models/01_staging/setlistfm_data:/opt/airflow/models/01_staging/setlistfm_data
  airflow-init:
    command:
    - -c
    - 'mkdir -p /sources/logs /sources/dags /sources/plugins

      chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}

      exec /entrypoint airflow version

      '
    depends_on: *id001
    entrypoint: /bin/bash
    environment:
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _PIP_ADDITIONAL_REQUIREMENTS: ''
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.2}
    user: 0:0
    volumes:
    - ${AIRFLOW_PROJ_DIR:-.}:/sources
    - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
  airflow-scheduler:
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres: *id002
      redis: *id003
    environment: &id004
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
      _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 30s
      test:
      - CMD
      - curl
      - --fail
      - http://localhost:8974/health
      timeout: 10s
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.2}
    restart: always
    user: ${AIRFLOW_UID:-50000}:0
    volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
    - ${AIRFLOW_PROJ_DIR:-.}/dags/sql:/opt/airflow/dags/sql
    - ${AIRFLOW_PROJ_DIR:-.}/scripts:/opt/airflow/scripts
    - ${AIRFLOW_PROJ_DIR:-.}/models/01_staging/setlistfm_data:/opt/airflow/models/01_staging/setlistfm_data
  airflow-triggerer:
    command: triggerer
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres: *id002
      redis: *id003
    environment: *id004
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 30s
      test:
      - CMD-SHELL
      - airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"
      timeout: 10s
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.2}
    restart: always
    user: ${AIRFLOW_UID:-50000}:0
    volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
    - ${AIRFLOW_PROJ_DIR:-.}/dags/sql:/opt/airflow/dags/sql
    - ${AIRFLOW_PROJ_DIR:-.}/scripts:/opt/airflow/scripts
    - ${AIRFLOW_PROJ_DIR:-.}/models/01_staging/setlistfm_data:/opt/airflow/models/01_staging/setlistfm_data
  airflow-webserver:
    command: webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres: *id002
      redis: *id003
    environment: *id004
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 30s
      test:
      - CMD
      - curl
      - --fail
      - http://localhost:8080/health
      timeout: 10s
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.2}
    ports:
    - 8081:8080
    restart: always
    user: ${AIRFLOW_UID:-50000}:0
    volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
    - ${AIRFLOW_PROJ_DIR:-.}/dags/sql:/opt/airflow/dags/sql
    - ${AIRFLOW_PROJ_DIR:-.}/scripts:/opt/airflow/scripts
    - ${AIRFLOW_PROJ_DIR:-.}/models/01_staging/setlistfm_data:/opt/airflow/models/01_staging/setlistfm_data
  postgres:
    environment:
      POSTGRES_DB: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_USER: airflow
    healthcheck:
      interval: 10s
      retries: 5
      start_period: 5s
      test:
      - CMD
      - pg_isready
      - -U
      - airflow
    image: postgres:13
    restart: always
    volumes:
    - postgres-db-volume:/var/lib/postgresql/data
  redis:
    expose:
    - 6379
    healthcheck:
      interval: 10s
      retries: 50
      start_period: 30s
      test:
      - CMD
      - redis-cli
      - ping
      timeout: 30s
    image: redis:7.2-bookworm
    restart: always
volumes:
  postgres-db-volume: null
x-airflow-common:
  depends_on: *id001
  environment: *id004
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.2}
  user: ${AIRFLOW_UID:-50000}:0
  volumes:
  - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
  - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
  - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
  - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
  - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
  - ${AIRFLOW_PROJ_DIR:-.}/dags/sql:/opt/airflow/dags/sql
  - ${AIRFLOW_PROJ_DIR:-.}/scripts:/opt/airflow/scripts
  - ${AIRFLOW_PROJ_DIR:-.}/models/01_staging/setlistfm_data:/opt/airflow/models/01_staging/setlistfm_data
